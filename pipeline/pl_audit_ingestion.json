{
	"name": "pl_audit_ingestion",
	"properties": {
		"activities": [
			{
				"name": "Get Metadata from input folder",
				"type": "GetMetadata",
				"dependsOn": [
					{
						"activity": "createAuditTable",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "ds_input_files",
						"type": "DatasetReference"
					},
					"fieldList": [
						"childItems"
					],
					"storeSettings": {
						"type": "AzureBlobStorageReadSettings",
						"enablePartitionDiscovery": false
					},
					"formatSettings": {
						"type": "DelimitedTextReadSettings"
					}
				}
			},
			{
				"name": "ForEachFileInInput",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Get Metadata from input folder",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Get Metadata from input folder').output.childItems",
						"type": "Expression"
					},
					"isSequential": true,
					"activities": [
						{
							"name": "Copy file to db",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "DelimitedTextSource",
									"storeSettings": {
										"type": "AzureBlobStorageReadSettings",
										"recursive": true,
										"enablePartitionDiscovery": false
									},
									"formatSettings": {
										"type": "DelimitedTextReadSettings"
									}
								},
								"sink": {
									"type": "AzureSqlSink",
									"writeBehavior": "insert",
									"sqlWriterUseTableLock": false,
									"tableOption": "autoCreate",
									"disableMetricsCollection": false
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "ds_inputFile_individual",
									"type": "DatasetReference",
									"parameters": {
										"dsp_fileName": {
											"value": "@item().name",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "ds_sql_db_conn",
									"type": "DatasetReference",
									"parameters": {
										"dsp_tblName": {
											"value": "@item().name",
											"type": "Expression"
										}
									}
								}
							]
						},
						{
							"name": "Set variable fileName",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "Copy file to db",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"variableName": "plvar_fileName",
								"value": {
									"value": "@item().name",
									"type": "Expression"
								}
							}
						},
						{
							"name": "Set variable recordsCount",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "Copy file to db",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"variableName": "plvar_recordsCount",
								"value": {
									"value": "@activity('Copy file to db').output.rowsCopied",
									"type": "Expression"
								}
							}
						},
						{
							"name": "updateAuditTbl",
							"type": "Script",
							"dependsOn": [
								{
									"activity": "Set variable fileName",
									"dependencyConditions": [
										"Succeeded"
									]
								},
								{
									"activity": "Set variable recordsCount",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"linkedServiceName": {
								"referenceName": "ls_sqldb_conn",
								"type": "LinkedServiceReference"
							},
							"typeProperties": {
								"scripts": [
									{
										"parameters": [
											{
												"name": "fileName",
												"type": "String",
												"value": {
													"value": "@variables('plvar_fileName')",
													"type": "Expression"
												},
												"direction": "Input"
											},
											{
												"name": "recordCount",
												"type": "Int32",
												"value": {
													"value": "@variables('plvar_recordsCount')",
													"type": "Expression"
												},
												"direction": "Input"
											}
										],
										"type": "Query",
										"text": "insert into dbo.AuditTbl values (@fileName, @recordCount)"
									}
								],
								"scriptBlockExecutionTimeout": "02:00:00"
							}
						}
					]
				}
			},
			{
				"name": "createAuditTable",
				"type": "Script",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"linkedServiceName": {
					"referenceName": "ls_sqldb_conn",
					"type": "LinkedServiceReference"
				},
				"typeProperties": {
					"scripts": [
						{
							"type": "NonQuery",
							"text": "create table dbo.AuditTbl(\nid int identity(1,1),\nfileName varchar(50),\nrecordCounts int)"
						}
					],
					"scriptBlockExecutionTimeout": "02:00:00"
				}
			}
		],
		"variables": {
			"plvar_fileName": {
				"type": "String"
			},
			"plvar_recordsCount": {
				"type": "Integer"
			}
		},
		"annotations": []
	}
}